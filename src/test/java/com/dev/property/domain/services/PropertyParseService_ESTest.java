/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 04 14:15:24 GMT 2018
 */

package com.dev.property.domain.services;

import org.junit.Test;
import static org.junit.Assert.*;
import com.dev.property.domain.services.PropertyParseService;
import com.dev.property.model.Property;
import java.io.File;
import java.math.BigDecimal;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.web.multipart.MultipartFile;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyParseService_ESTest extends PropertyParseService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      String[] stringArray0 = new String[26];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      Property property0 = propertyParseService0.mapToPropertyObject(stringArray0);
      assertNull(property0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      BigDecimal bigDecimal0 = propertyParseService0.parseToBigDecimal("0WCbn");
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      BigDecimal bigDecimal0 = propertyParseService0.parseToBigDecimal("53u,$");
      assertEquals((byte)53, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      BigDecimal bigDecimal0 = propertyParseService0.parseToBigDecimal("-26/Vnv-{R=G8s%x-n:");
      assertEquals((byte) (-26), bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "1";
      stringArray0[1] = "1";
      stringArray0[2] = "1";
      stringArray0[3] = "1";
      Property property0 = propertyParseService0.mapToPropertyObject(stringArray0);
      assertNull(property0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      ArrayList<Property> arrayList0 = propertyParseService0.parse((MultipartFile) null);
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      BigDecimal bigDecimal0 = propertyParseService0.parseToBigDecimal("");
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PropertyParseService propertyParseService0 = new PropertyParseService();
      File file0 = propertyParseService0.convertToFile((MultipartFile) null);
      assertNull(file0);
  }
}
